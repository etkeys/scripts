#!/bin/sh
#
# This script will ssh connect to the provided host using the provided account,
# or the name specified by $USER, and run commands to retrieve system state 
# information such as
#   - The amount of RAM being used
#   - The amount of Disk space being used
#   - CPU utilization

print_usage(){
    echo "ussage: ssh-getstats HOST ACCOUNT_NAME"
}

HOST="$1"
ACCOUNT="${2:-$USER}"

if [ -z "$HOST" ] ; then
    print_usage
    echo "error: missing host argument!"
    exit 1
fi

# Quoting EOF at the start prevents variable substitution before the command
# is passed to the remote. Without it, all the uname and lsb_release calls
# would be substituted with the local machine information.
ssh "$ACCOUNT"@$HOST /bin/bash << 'EOF'
    printf "@%s: %s - %s (%s %s %s)\n" "$(uname -n)" "$(lsb_release -sd)" "$(lsb_release -sc)" "$(uname -o)" "$(uname -r)" "$(uname -m)"
    uptime; printf "\n";
    free -h; printf "\n";
    df -h /; printf "\n";
    mpstat 2 3 | perl -ne '/((^Average)|(.+CPU.+%)).+/ && print'
EOF

exit $?


